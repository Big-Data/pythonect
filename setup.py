#!/usr/bin/env python

try:

    import setuptools

except ImportError:

    from distribute_setup import use_setuptools

    use_setuptools()

    import setuptools


import sys
import distutils.core
import distutils.command.build


# Local imports

import pythonect


# Functions

def _mk_versiondotpy():

    with open('pythonect/_version.py', 'wt') as f:

        f.write('# DO NOT EDIT THIS FILE! It is automatically generated by setup.py\n__version__ = \'' + pythonect.__version__ + '\'\n')


# Classes

class Build(distutils.command.build.build):

    def run(self):

        # Generate `_version.py`

        _mk_versiondotpy()

        return distutils.command.build.build.run(self)


# Entry Point

if __name__ == "__main__":

    dependencies = ['ply>=3.4']

    major, minor = sys.version_info[:2]

    python_27 = (major > 2 or (major == 2 and minor >= 7))

    # < Python 2.7 ?

    if not python_27:

        # Python 2.6

        dependencies = dependencies + ['importlib', 'unittest2']

    setupconf = dict(
        name='Pythonect',
        version=pythonect.__version__,
        author='Itzik Kotler',
        author_email='xorninja@gmail.com',
        url='http://www.pythonect.org/',
        license='BSD',
        description='A general-purpose dataflow programming language based on Python, written in Python',

        long_description=open('README.rst').read(),
        scripts=['bin/pythonect'],
        packages=setuptools.find_packages(),

        classifiers=[
            'Development Status :: 4 - Beta',
            'License :: OSI Approved :: BSD License',
            'Operating System :: OS Independent',
            'Programming Language :: Python',
            'Programming Language :: Python :: 2.7',
            'Programming Language :: Python :: 2.6',
        ],

        install_requires=dependencies,

        cmdclass={'build': Build},

        test_suite='pythonect.test.get_tests'
    )

    setuptools.setup(**setupconf)
